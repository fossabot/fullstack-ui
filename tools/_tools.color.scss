/* ==========================================================================
   #COLOR
   ========================================================================== */

@mixin set-color($name, $color) {
  @if global-variable-exists(global-palette) {
    $global-palette: map-merge($global-palette, ($name: $color)) !global;
  } @else {
    $global-palette: ($name: $color) !global;
  }
}

@mixin set-palette($map) {
  @each $name, $color in $map {
    @include set-color($name, $color);
  }
}

@mixin text-color($color: null, $important: null) {
  @if $important { $important: !important; }
  color: get-color($color) $important;
}

@mixin background-color($color: null, $important: null) {
  @if $important { $important: !important; }
  background-color: get-color($color) $important;
}

@function is-color($color) {
  @if map-has-key($global-palette, $color) { @return true; }
  @return false;
}

@function get-color($color) {
  @if is-color($color) { @return map-get($global-palette, $color); }

  @if type-of($color) == "color" {
    @return $color;
    @warn "Instead of calling get-color(#{$color}), you should just use the \
      color itself or add it to the $global-palette with \
      set-color(\"color-name-goes-here\": #{$color})";
  }

  @error "Color `#{$color}` wasn't found in \
    $global-palette: #{inspect($global-palette)}";
}
